/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UIGeshabitat;

import BLGeshabitat.Familias.Candidatura;
import BLGeshabitat.GesHabitat;
import BLGeshabitat.Utilizadores.Funcionario;
import BLGeshabitat.Projectos.Projecto;
import DAOGeshabitat.DBConnection;
import DAOGeshabitat.PersistableException;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Insets;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyVetoException;
import java.io.IOException;
import java.util.List;
import javax.swing.DefaultDesktopManager;
import javax.swing.DesktopManager;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JComponent;
import javax.swing.JDesktopPane;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JViewport;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameListener;
import javax.swing.event.MenuEvent;
import javax.swing.event.MenuListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 
 */
public class JmdiMain extends javax.swing.JFrame implements InternalFrameListener{
    
    public static GesHabitat facadeBL;
    public static String configFile = "./connection.config";
    public static Funcionario currentUser;
    public static DBConnection connectionRoot = null;
    public static DBConnection activeUser = null;
    
    
    public static void reorderId(DefaultTableModel tableModel) {
        for(int i=0; i < tableModel.getRowCount(); i++) {
            tableModel.setValueAt(i+1, i, 0);
        }
    }
    
    public static boolean exists(String nome,JTable table,String coluna) {
        boolean ret=false;
        int column = 0;
        for(int i=0; i< table.getColumnCount(); i++) {
            if(table.getColumnName(i).equals(coluna)) column=i;
        }

        for(int i=0;i<table.getRowCount();i++) {
            if(nome.equals(table.getValueAt(i, column))) return true;
        }
        return false;
    }
    
     
    /**
     * Creates new form jMdiMain
     */
    public JmdiMain() {

        currentUser = null;
        this.setExtendedState(Frame.MAXIMIZED_BOTH);        
        initComponents();

        jScrollDesktopMain.getVerticalScrollBar().setUnitIncrement(16);
        jPanelProject.setVisible(false);
        jPanelDefault.setVisible(true);
        jPanelCandidatura.setVisible(false);
        jPanelAprovarCand.setVisible(false);
        jPanelRejeitarCand.setVisible(false);
        jPanelReabrirCand.setVisible(false);        

        

        Login();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator2 = new javax.swing.JSeparator();
        jMainToolBar = new javax.swing.JToolBar();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jbtProcurar = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jBtNewCand = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        jBtFuncionario = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        jBtVoluntario = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        jBtDoador = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        jBtDoacao = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JToolBar.Separator();
        jBtDonativos = new javax.swing.JButton();
        jSeparator10 = new javax.swing.JToolBar.Separator();
        jStatusBar = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLblLoginStatus = new javax.swing.JLabel();
        jLeftPanelLogo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollDesktopMain = new javax.swing.JScrollPane();
        jDesktopPaneMain = new MDIDesktopPane();
        jLayeredPaneLeft = new javax.swing.JLayeredPane();
        jPanelDefault = new SidePanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        dateChooserPanel1 = new datechooser.beans.DateChooserPanel();
        jPanelCandidatura = new SidePanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLblEstadoCand = new javax.swing.JLabel();
        jPanelRejeitarCand = new javax.swing.JPanel();
        jBtRejeitarCand = new javax.swing.JButton();
        jPanelAprovarCand = new javax.swing.JPanel();
        jBtAprovarCand = new javax.swing.JButton();
        jPanelReabrirCand = new javax.swing.JPanel();
        jBtRejeitarCand1 = new javax.swing.JButton();
        jPanelProject = new SidePanel();
        jPanel2 = new javax.swing.JPanel();
        jPanelTarefas = new javax.swing.JPanel();
        jBtConcluirTarefa = new javax.swing.JButton();
        jBtInitTarefa = new javax.swing.JButton();
        jPanelPlaneamento = new javax.swing.JPanel();
        jBtPlaneamento = new javax.swing.JButton();
        jPanelRegistos = new javax.swing.JPanel();
        jBtRegistoMaterial = new javax.swing.JButton();
        jBtVoluntariado = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLblEstado = new javax.swing.JLabel();
        jPanelEncerrar = new javax.swing.JPanel();
        jBtEncerrarProjecto = new javax.swing.JButton();
        jPanelReabrir = new javax.swing.JPanel();
        jBtReabrir = new javax.swing.JButton();
        jBarraMenus = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMnuLogin = new javax.swing.JMenuItem();
        jMnuConnectionSetup = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMnuLogout = new javax.swing.JMenuItem();
        jMnuSair = new javax.swing.JMenuItem();
        jMenuWindow = new WindowMenu((MDIDesktopPane)jDesktopPaneMain);
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Geshabitat");
        setExtendedState(6);

        jMainToolBar.setFloatable(false);
        jMainToolBar.setToolTipText("");
        jMainToolBar.setFocusable(false);

        jSeparator1.setSeparatorSize(new java.awt.Dimension(20, 10));
        jMainToolBar.add(jSeparator1);

        jbtProcurar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UIGeshabitat/icons/search_small.png"))); // NOI18N
        jbtProcurar.setToolTipText("Procurar");
        jbtProcurar.setEnabled(false);
        jbtProcurar.setFocusable(false);
        jbtProcurar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtProcurar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtProcurarActionPerformed(evt);
            }
        });
        jMainToolBar.add(jbtProcurar);
        jMainToolBar.add(jSeparator4);

        jBtNewCand.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UIGeshabitat/icons/candidatura.png"))); // NOI18N
        jBtNewCand.setToolTipText("Nova Candidatura");
        jBtNewCand.setEnabled(false);
        jBtNewCand.setFocusable(false);
        jBtNewCand.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNewCand.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNewCand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNewCandActionPerformed(evt);
            }
        });
        jMainToolBar.add(jBtNewCand);
        jMainToolBar.add(jSeparator5);

        jBtFuncionario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UIGeshabitat/icons/funcionario.png"))); // NOI18N
        jBtFuncionario.setToolTipText("Novo Funcionário");
        jBtFuncionario.setEnabled(false);
        jBtFuncionario.setFocusable(false);
        jBtFuncionario.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtFuncionario.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtFuncionarioActionPerformed(evt);
            }
        });
        jMainToolBar.add(jBtFuncionario);
        jMainToolBar.add(jSeparator6);

        jBtVoluntario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UIGeshabitat/icons/funcionarios.png"))); // NOI18N
        jBtVoluntario.setToolTipText("Novo Voluntário");
        jBtVoluntario.setEnabled(false);
        jBtVoluntario.setFocusable(false);
        jBtVoluntario.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtVoluntario.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtVoluntario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtVoluntarioActionPerformed(evt);
            }
        });
        jMainToolBar.add(jBtVoluntario);
        jMainToolBar.add(jSeparator7);

        jBtDoador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UIGeshabitat/icons/doador_small.png"))); // NOI18N
        jBtDoador.setToolTipText("Novo Doador");
        jBtDoador.setEnabled(false);
        jBtDoador.setFocusable(false);
        jBtDoador.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtDoador.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtDoador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtDoadorActionPerformed(evt);
            }
        });
        jMainToolBar.add(jBtDoador);
        jMainToolBar.add(jSeparator8);

        jBtDoacao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UIGeshabitat/icons/donation-icon.png"))); // NOI18N
        jBtDoacao.setToolTipText("Nova Doação");
        jBtDoacao.setEnabled(false);
        jBtDoacao.setFocusable(false);
        jBtDoacao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtDoacao.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtDoacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtDoacaoActionPerformed(evt);
            }
        });
        jMainToolBar.add(jBtDoacao);
        jMainToolBar.add(jSeparator9);

        jBtDonativos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UIGeshabitat/icons/managment.png"))); // NOI18N
        jBtDonativos.setToolTipText("Gestão de Donativos");
        jBtDonativos.setEnabled(false);
        jBtDonativos.setFocusable(false);
        jBtDonativos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtDonativos.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtDonativos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtDonativosActionPerformed(evt);
            }
        });
        jMainToolBar.add(jBtDonativos);
        jMainToolBar.add(jSeparator10);

        jStatusBar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Estado:");

        jLblLoginStatus.setText("Não está autenticado");

        javax.swing.GroupLayout jStatusBarLayout = new javax.swing.GroupLayout(jStatusBar);
        jStatusBar.setLayout(jStatusBarLayout);
        jStatusBarLayout.setHorizontalGroup(
            jStatusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jStatusBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLblLoginStatus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jStatusBarLayout.setVerticalGroup(
            jStatusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jStatusBarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jStatusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLblLoginStatus))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UIGeshabitat/pictures/logotipo_habitat_trans.png"))); // NOI18N

        javax.swing.GroupLayout jLeftPanelLogoLayout = new javax.swing.GroupLayout(jLeftPanelLogo);
        jLeftPanelLogo.setLayout(jLeftPanelLogoLayout);
        jLeftPanelLogoLayout.setHorizontalGroup(
            jLeftPanelLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jLeftPanelLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLeftPanelLogoLayout.createSequentialGroup()
                    .addContainerGap(18, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(19, Short.MAX_VALUE)))
        );
        jLeftPanelLogoLayout.setVerticalGroup(
            jLeftPanelLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jLeftPanelLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLeftPanelLogoLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jScrollDesktopMain.setViewportView(jDesktopPaneMain);

        jLayeredPaneLeft.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLayeredPaneLeft.setLayout(new javax.swing.OverlayLayout(jLayeredPaneLeft));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true), "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true), "Bloco Notas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
        );

        dateChooserPanel1.setCurrentView(new datechooser.view.appearance.AppearancesList("Dali",
            new datechooser.view.appearance.ViewAppearance("GesHabitat",
                new datechooser.view.appearance.custom.CustomCellAppearance(new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 255, 255),
                    (javax.swing.border.Border)null,
                    new java.awt.Font("Serif", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(0, 0, 153),
                    0.4f),
                new datechooser.view.appearance.custom.CustomCellAppearance(new java.awt.Color(153, 153, 255),
                    new java.awt.Color(255, 255, 0),
                    (javax.swing.border.Border)null,
                    new java.awt.Font("Serif", java.awt.Font.BOLD, 14),
                    new java.awt.Color(0, 0, 102),
                    0.2f),
                new datechooser.view.appearance.custom.CustomCellAppearance(new java.awt.Color(0, 0, 0),
                    new java.awt.Color(51, 255, 51),
                    (javax.swing.border.Border)null,
                    new java.awt.Font("Serif", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(0, 0, 153),
                    0.5f),
                new datechooser.view.appearance.custom.CustomCellAppearance(new java.awt.Color(204, 204, 204),
                    new java.awt.Color(0, 0, 102),
                    (javax.swing.border.Border)null,
                    new java.awt.Font("Serif", java.awt.Font.ITALIC, 10),
                    new java.awt.Color(0, 0, 255),
                    0.4f),
                new datechooser.view.appearance.custom.CustomCellAppearance(new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 255, 255),
                    (javax.swing.border.Border)null,
                    new java.awt.Font("Serif", java.awt.Font.BOLD, 12),
                    new java.awt.Color(0, 0, 255),
                    0.4f),
                new datechooser.view.appearance.custom.CustomCellAppearance(new java.awt.Color(255, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    (javax.swing.border.Border)null,
                    new java.awt.Font("Serif", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(255, 0, 0),
                    0.3f),
                new datechooser.view.BackRenderer( 1,
                    "file:/home/nelson/Projects/git/TrabDSS/Geshabitat/Libraries/DateChooser.jar!/datechooser/beans/pic/dali.gif"),
                true,
                true),
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.BOLD, 12),
                    new java.awt.Color(51, 51, 51),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.BOLD, 12),
                    new java.awt.Color(51, 51, 51),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.BOLD, 12),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.BOLD, 12),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.BOLD, 12),
                    new java.awt.Color(51, 51, 51),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.BOLD, 12),
                    new java.awt.Color(51, 51, 51),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    dateChooserPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.LOWERED,
        (java.awt.Color)null,
        (java.awt.Color)null));
dateChooserPanel1.setLocale(new java.util.Locale("pt", "", ""));
dateChooserPanel1.setLocked(true);
dateChooserPanel1.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);

javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
jPanel1.setLayout(jPanel1Layout);
jPanel1Layout.setHorizontalGroup(
    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
        .addComponent(dateChooserPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(0, 0, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(dateChooserPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout jPanelDefaultLayout = new javax.swing.GroupLayout(jPanelDefault);
    jPanelDefault.setLayout(jPanelDefaultLayout);
    jPanelDefaultLayout.setHorizontalGroup(
        jPanelDefaultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelDefaultLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanelDefaultLayout.setVerticalGroup(
        jPanelDefaultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelDefaultLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );

    jLayeredPaneLeft.add(jPanelDefault);

    jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true), "Candidatura", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

    jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
    jLabel3.setText("Estado:");

    jLblEstadoCand.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
    jLblEstadoCand.setText("Em Aprovacao");

    jPanelRejeitarCand.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Rejeitar"));

    jBtRejeitarCand.setText("Rejeitar Candidatura");
    jBtRejeitarCand.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtRejeitarCandActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanelRejeitarCandLayout = new javax.swing.GroupLayout(jPanelRejeitarCand);
    jPanelRejeitarCand.setLayout(jPanelRejeitarCandLayout);
    jPanelRejeitarCandLayout.setHorizontalGroup(
        jPanelRejeitarCandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelRejeitarCandLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jBtRejeitarCand, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
            .addContainerGap())
    );
    jPanelRejeitarCandLayout.setVerticalGroup(
        jPanelRejeitarCandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelRejeitarCandLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jBtRejeitarCand)
            .addGap(15, 15, 15))
    );

    jPanelAprovarCand.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Aprovar"));

    jBtAprovarCand.setText("Aprovar Candidatura");
    jBtAprovarCand.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtAprovarCandActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanelAprovarCandLayout = new javax.swing.GroupLayout(jPanelAprovarCand);
    jPanelAprovarCand.setLayout(jPanelAprovarCandLayout);
    jPanelAprovarCandLayout.setHorizontalGroup(
        jPanelAprovarCandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelAprovarCandLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jBtAprovarCand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );
    jPanelAprovarCandLayout.setVerticalGroup(
        jPanelAprovarCandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelAprovarCandLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jBtAprovarCand)
            .addGap(15, 15, 15))
    );

    jPanelReabrirCand.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Reabrir"));

    jBtRejeitarCand1.setText("Reabrir Candidatura");
    jBtRejeitarCand1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtRejeitarCand1ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanelReabrirCandLayout = new javax.swing.GroupLayout(jPanelReabrirCand);
    jPanelReabrirCand.setLayout(jPanelReabrirCandLayout);
    jPanelReabrirCandLayout.setHorizontalGroup(
        jPanelReabrirCandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelReabrirCandLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jBtRejeitarCand1, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
            .addContainerGap())
    );
    jPanelReabrirCandLayout.setVerticalGroup(
        jPanelReabrirCandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelReabrirCandLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jBtRejeitarCand1)
            .addGap(15, 15, 15))
    );

    javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
    jPanel7.setLayout(jPanel7Layout);
    jPanel7Layout.setHorizontalGroup(
        jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel7Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanelRejeitarCand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelAprovarCand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(jLblEstadoCand))
                    .addGap(0, 0, Short.MAX_VALUE))
                .addComponent(jPanelReabrirCand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    jPanel7Layout.setVerticalGroup(
        jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel7Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel3)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLblEstadoCand)
            .addGap(18, 18, 18)
            .addComponent(jPanelAprovarCand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jPanelRejeitarCand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jPanelReabrirCand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(340, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout jPanelCandidaturaLayout = new javax.swing.GroupLayout(jPanelCandidatura);
    jPanelCandidatura.setLayout(jPanelCandidaturaLayout);
    jPanelCandidaturaLayout.setHorizontalGroup(
        jPanelCandidaturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelCandidaturaLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );
    jPanelCandidaturaLayout.setVerticalGroup(
        jPanelCandidaturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelCandidaturaLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );

    jLayeredPaneLeft.add(jPanelCandidatura);

    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true), "Projecto", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

    jPanelTarefas.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Tarefas", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));

    jBtConcluirTarefa.setText("Concluir Tarefa");
    jBtConcluirTarefa.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtConcluirTarefaActionPerformed(evt);
        }
    });

    jBtInitTarefa.setText("Iniciar Tarefa");
    jBtInitTarefa.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtInitTarefaActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanelTarefasLayout = new javax.swing.GroupLayout(jPanelTarefas);
    jPanelTarefas.setLayout(jPanelTarefasLayout);
    jPanelTarefasLayout.setHorizontalGroup(
        jPanelTarefasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelTarefasLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanelTarefasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jBtInitTarefa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtConcluirTarefa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    jPanelTarefasLayout.setVerticalGroup(
        jPanelTarefasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelTarefasLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jBtInitTarefa)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jBtConcluirTarefa)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPanelPlaneamento.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Gerir Fases/Tarefas"));

    jBtPlaneamento.setText("Definir Planeamento");
    jBtPlaneamento.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtPlaneamentoActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanelPlaneamentoLayout = new javax.swing.GroupLayout(jPanelPlaneamento);
    jPanelPlaneamento.setLayout(jPanelPlaneamentoLayout);
    jPanelPlaneamentoLayout.setHorizontalGroup(
        jPanelPlaneamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelPlaneamentoLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jBtPlaneamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );
    jPanelPlaneamentoLayout.setVerticalGroup(
        jPanelPlaneamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelPlaneamentoLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jBtPlaneamento)
            .addContainerGap())
    );

    jPanelRegistos.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Registos"));

    jBtRegistoMaterial.setText("Registo Material");
    jBtRegistoMaterial.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtRegistoMaterialActionPerformed(evt);
        }
    });

    jBtVoluntariado.setText("Registo Voluntariado");
    jBtVoluntariado.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtVoluntariadoActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanelRegistosLayout = new javax.swing.GroupLayout(jPanelRegistos);
    jPanelRegistos.setLayout(jPanelRegistosLayout);
    jPanelRegistosLayout.setHorizontalGroup(
        jPanelRegistosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelRegistosLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanelRegistosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jBtRegistoMaterial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtVoluntariado, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
            .addContainerGap())
    );
    jPanelRegistosLayout.setVerticalGroup(
        jPanelRegistosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelRegistosLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jBtRegistoMaterial)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jBtVoluntariado)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Estado Projecto"));

    jLblEstado.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
    jLblEstado.setText("Em execução");

    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
    jPanel6.setLayout(jPanel6Layout);
    jPanel6Layout.setHorizontalGroup(
        jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel6Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLblEstado)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel6Layout.setVerticalGroup(
        jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLblEstado)
            .addContainerGap())
    );

    jPanelEncerrar.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Encerrar"));

    jBtEncerrarProjecto.setText("Encerrar Projecto");
    jBtEncerrarProjecto.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtEncerrarProjectoActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanelEncerrarLayout = new javax.swing.GroupLayout(jPanelEncerrar);
    jPanelEncerrar.setLayout(jPanelEncerrarLayout);
    jPanelEncerrarLayout.setHorizontalGroup(
        jPanelEncerrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelEncerrarLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jBtEncerrarProjecto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );
    jPanelEncerrarLayout.setVerticalGroup(
        jPanelEncerrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelEncerrarLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jBtEncerrarProjecto)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPanelReabrir.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Reabrir"));

    jBtReabrir.setText("Reabrir Projecto");
    jBtReabrir.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtReabrirActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanelReabrirLayout = new javax.swing.GroupLayout(jPanelReabrir);
    jPanelReabrir.setLayout(jPanelReabrirLayout);
    jPanelReabrirLayout.setHorizontalGroup(
        jPanelReabrirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelReabrirLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jBtReabrir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );
    jPanelReabrirLayout.setVerticalGroup(
        jPanelReabrirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelReabrirLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jBtReabrir)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jPanelReabrir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelEncerrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelTarefas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelPlaneamento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelRegistos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jPanelPlaneamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanelRegistos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanelTarefas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanelEncerrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jPanelReabrir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout jPanelProjectLayout = new javax.swing.GroupLayout(jPanelProject);
    jPanelProject.setLayout(jPanelProjectLayout);
    jPanelProjectLayout.setHorizontalGroup(
        jPanelProjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelProjectLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );
    jPanelProjectLayout.setVerticalGroup(
        jPanelProjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelProjectLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );

    jLayeredPaneLeft.add(jPanelProject);

    jMenuFile.setText("Ficheiro");

    jMnuLogin.setText("Login");
    jMnuLogin.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jMnuLoginActionPerformed(evt);
        }
    });
    jMenuFile.add(jMnuLogin);

    jMnuConnectionSetup.setText("Configurar Conexão");
    jMnuConnectionSetup.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jMnuConnectionSetupActionPerformed(evt);
        }
    });
    jMenuFile.add(jMnuConnectionSetup);
    jMenuFile.add(jSeparator3);

    jMnuLogout.setText("Logout");
    jMnuLogout.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jMnuLogoutActionPerformed(evt);
        }
    });
    jMenuFile.add(jMnuLogout);

    jMnuSair.setText("Sair");
    jMnuSair.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jMnuSairActionPerformed(evt);
        }
    });
    jMenuFile.add(jMnuSair);

    jBarraMenus.add(jMenuFile);

    jMenuWindow.setText("Janela");
    jBarraMenus.add(jMenuWindow);

    jMenu1.setText("Ajuda");
    jBarraMenus.add(jMenu1);

    setJMenuBar(jBarraMenus);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jStatusBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLeftPanelLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLayeredPaneLeft))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollDesktopMain, javax.swing.GroupLayout.DEFAULT_SIZE, 830, Short.MAX_VALUE))
                .addComponent(jMainToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(jMainToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jLeftPanelLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLayeredPaneLeft))
                .addComponent(jScrollDesktopMain))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jStatusBar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void Login() {
       if(currentUser!=null) return;  // se tiver logado não faz nada
       
        // Tenta root 
        try {
             connectionRoot = DBConnection.load(configFile);
             
        } catch (IOException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this,"Não foi possivel carregar as configurações da Base Dados.\nPor favor efectue novas configuraçoes através da opção Setup Connection accessivel no menu File","Erro", JOptionPane.ERROR_MESSAGE);
            return;
        } 
        
        if(connectionRoot!=null) try {
            facadeBL = new GesHabitat(connectionRoot);
        } catch (PersistableException ex) {
            JOptionPane.showMessageDialog(this,"Não foi possivel estabelecer conexão à Base Dados.\nVerifique as definições e volte a tentar","Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //Got root
        List<Funcionario> funcionarios = null;
        try {

            funcionarios = facadeBL.getUsers();
        } catch (PersistableException ex) {
            JOptionPane.showMessageDialog(this,"Não foi possivel carregar a lista de Utilizadores.\nVerifique as definições e volte a tentar","Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //Adiciona Adimin a lista de users
        Funcionario admin = new Funcionario();
        admin.setUsername("Admin");
        admin.setNome("Admin");
        funcionarios.add(admin);

        this.ShowLogin(funcionarios);
    }
    
    private void ShowLogin (List<Funcionario> users) {
        JintFrmLogin jfrmLogin = new JintFrmLogin(users);
        Dimension desktopSize = jDesktopPaneMain.getSize();
        Dimension frmLoginSize = jfrmLogin.getSize();

        jfrmLogin.setLocation((desktopSize.width - frmLoginSize.width)/2,
            (desktopSize.height - frmLoginSize.height)/2);

        jfrmLogin.setVisible(true);

        jDesktopPaneMain.add(jfrmLogin);
    }
    
    private void Logout() {
        if(currentUser!=null) {
            currentUser=null;
            this.jbtProcurar.setEnabled(false);
            this.jBtFuncionario.setEnabled(false);
            this.jBtNewCand.setEnabled(false);
            this.jBtDoacao.setEnabled(false);
            this.jBtVoluntario.setEnabled(false);
            this.jBtDoador.setEnabled(false);
            this.jBtDonativos.setEnabled(false);
        
            this.jLblLoginStatus.setText("Não está autenticado");
            try {
                facadeBL.getFacadeDAO().closeConnection();
            } catch (PersistableException ex) {
            }
        }
    }
    
    
    public void SetStart() {
        if(currentUser==null) {
            JOptionPane.showMessageDialog(this,"Ocorreu um erro, experimente reiniciar as configuraçoes da base dados\nCaso o problema persista contacte o administrador de sistema","Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        
        this.jbtProcurar.setEnabled(true); // visible for everyone
        
        if(currentUser.getUsername().equals("Admin"))  this.jBtFuncionario.setEnabled(true);
        if(currentUser.isCConstrucao())  this.jbtProcurar.setEnabled(true);
        if(currentUser.isCFamilias()) {
            this.jbtProcurar.setEnabled(true);
            this.jBtNewCand.setEnabled(true);
        }
        if(currentUser.isCFundos()) {
            this.jBtDoacao.setEnabled(true);
            this.jBtVoluntario.setEnabled(true);
            this.jBtDoador.setEnabled(true);
            this.jBtDonativos.setEnabled(true);
        }
        this.jLblLoginStatus.setText("Autenticado como " + currentUser.getUsername());
        
    }
    
    private void jBtPlaneamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPlaneamentoActionPerformed
        int Project_Id = ((JintFrmProject)((SidePanel)this.jPanelProject).getjIntFrame()).projecto.getId();
        
        JintFrmGerirFases frmFases = new JintFrmGerirFases(Project_Id);
        frmFases.addInternalFrameListener(this);
        this.jDesktopPaneMain.add(frmFases);
        frmFases.setVisible(true);
        frmFases.setLayer(20);
        
    }//GEN-LAST:event_jBtPlaneamentoActionPerformed
    private void jBtRegistoMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtRegistoMaterialActionPerformed
        int Project_Id = ((JintFrmProject)((SidePanel)this.jPanelProject).getjIntFrame()).projecto.getId();
        JintFrmAlocarMaterial frmMaterial = new JintFrmAlocarMaterial(Project_Id);
        frmMaterial.addInternalFrameListener(this);
        this.jDesktopPaneMain.add(frmMaterial);
        frmMaterial.setVisible(true);
        frmMaterial.setLayer(20);
        
    }//GEN-LAST:event_jBtRegistoMaterialActionPerformed
    private void jBtInitTarefaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtInitTarefaActionPerformed
        int Project_Id = ((JintFrmProject)((SidePanel)this.jPanelProject).getjIntFrame()).projecto.getId();        
        JintFrmTarefas frmTarefas = new JintFrmTarefas(true,Project_Id);
        frmTarefas.addInternalFrameListener(this);
        this.jDesktopPaneMain.add(frmTarefas);
        frmTarefas.setVisible(true);
        frmTarefas.setLayer(21);        
    }//GEN-LAST:event_jBtInitTarefaActionPerformed
    private void jBtConcluirTarefaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtConcluirTarefaActionPerformed
        int Project_Id = ((JintFrmProject)((SidePanel)this.jPanelProject).getjIntFrame()).projecto.getId();
        JintFrmTarefas frmTarefas = new JintFrmTarefas(false,Project_Id);
        frmTarefas.addInternalFrameListener(this);
        this.jDesktopPaneMain.add(frmTarefas);
        frmTarefas.setVisible(true);  
        frmTarefas.setLayer(22);
    }//GEN-LAST:event_jBtConcluirTarefaActionPerformed
    private void jMnuConnectionSetupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMnuConnectionSetupActionPerformed
        JintFrmDBConnection frmDBConnection = new JintFrmDBConnection();
        //frmTarefas.addInternalFrameListener(this);
        this.jDesktopPaneMain.add(frmDBConnection);
        frmDBConnection.setVisible(true); 
        
    }//GEN-LAST:event_jMnuConnectionSetupActionPerformed
    private void jBtAprovarCandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAprovarCandActionPerformed
        int dialogButton = 0;
        int dialogResult = JOptionPane.showConfirmDialog (null, "Tem a certeza que deseja continuar?\nEsta alteração não pode ser desfeita e dará inicio a um novo projecto","Aviso",dialogButton);
        if(dialogResult == JOptionPane.YES_OPTION) {
            
            Candidatura c = ((JintFrmNewCand)((SidePanel)jPanelCandidatura).getjIntFrame()).getCand();
            try {
                JmdiMain.facadeBL.aprovarCand(c);
            } catch (PersistableException ex) {
               JOptionPane.showMessageDialog(this,"Não foi possivel efectuar alteração, por favor contacte o Administrador de Sistema","Erro", JOptionPane.ERROR_MESSAGE);
               return;
            }
            JintFrmNewProject frmNewProject = new JintFrmNewProject(c.getId(),c.getFuncionario_Id());
            frmNewProject.addInternalFrameListener(this);
            this.jDesktopPaneMain.add(frmNewProject);
            frmNewProject.setVisible(true);  
        }
    }//GEN-LAST:event_jBtAprovarCandActionPerformed
    private void jBtVoluntariadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtVoluntariadoActionPerformed
        int Project_Id = ((JintFrmProject)((SidePanel)this.jPanelProject).getjIntFrame()).projecto.getId();
        JintFrmAlocarVoluntarios frmVoluntarios = new JintFrmAlocarVoluntarios(Project_Id);
        frmVoluntarios.addInternalFrameListener(this);
        this.jDesktopPaneMain.add(frmVoluntarios);
        frmVoluntarios.setVisible(true);
        frmVoluntarios.setLayer(20);
    }//GEN-LAST:event_jBtVoluntariadoActionPerformed
    private void jBtDonativosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtDonativosActionPerformed
        JintFrmDonations jfrmDoacoes = new JintFrmDonations(jPanelDefault);

        jDesktopPaneMain.add(jfrmDoacoes);

        jfrmDoacoes.addInternalFrameListener(this);

        ((MDIDesktopPane)jDesktopPaneMain).checkDesktopSize();
        jfrmDoacoes.setVisible(true);

    }//GEN-LAST:event_jBtDonativosActionPerformed
    private void jBtDoacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtDoacaoActionPerformed
        JintFrmNewDonation jfrmNewDoacao = new JintFrmNewDonation();
        jfrmNewDoacao.addInternalFrameListener(this); 
        jDesktopPaneMain.add(jfrmNewDoacao);
        ((MDIDesktopPane)jDesktopPaneMain).checkDesktopSize();
        jfrmNewDoacao.setVisible(true);
    }//GEN-LAST:event_jBtDoacaoActionPerformed
    private void jBtDoadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtDoadorActionPerformed
        JintFrmNewDoador jfrmNewDoador = new JintFrmNewDoador("Doador");
        jfrmNewDoador.addInternalFrameListener(this);    
        jDesktopPaneMain.add(jfrmNewDoador);
        ((MDIDesktopPane)jDesktopPaneMain).checkDesktopSize();
        jfrmNewDoador.setVisible(true);
    }//GEN-LAST:event_jBtDoadorActionPerformed
    private void jBtVoluntarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtVoluntarioActionPerformed
        JintFrmNewVoluntario jfrmNewVoluntario = new JintFrmNewVoluntario();
        jfrmNewVoluntario.addInternalFrameListener(this);
        jDesktopPaneMain.add(jfrmNewVoluntario);
        ((MDIDesktopPane)jDesktopPaneMain).checkDesktopSize();
        jfrmNewVoluntario.setVisible(true);
    }//GEN-LAST:event_jBtVoluntarioActionPerformed
    private void jBtFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtFuncionarioActionPerformed
        JintFrmNewFuncionario jfrmNewFuncionario = new JintFrmNewFuncionario();
         jfrmNewFuncionario.addInternalFrameListener(this);       
        jDesktopPaneMain.add(jfrmNewFuncionario);
        ((MDIDesktopPane)jDesktopPaneMain).checkDesktopSize();
        jfrmNewFuncionario.setVisible(true);
    }//GEN-LAST:event_jBtFuncionarioActionPerformed
    private void jBtNewCandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNewCandActionPerformed
        JintFrmNewCand jfrmNewCand = new JintFrmNewCand();
        jfrmNewCand.addInternalFrameListener(this);
        jDesktopPaneMain.add(jfrmNewCand);

        //        try {
            //            jfrmNewCand.setMaximum(true);
            //        } catch (PropertyVetoException ex) {
            //        }

        ((MDIDesktopPane)jDesktopPaneMain).checkDesktopSize();
        jfrmNewCand.setVisible(true);

    }//GEN-LAST:event_jBtNewCandActionPerformed
    private void jbtProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtProcurarActionPerformed
        JintFrmSearch jfrmMain = new JintFrmSearch();
        jfrmMain.addInternalFrameListener(this);
        jDesktopPaneMain.add(jfrmMain);

        try {
            jfrmMain.setMaximum(true);
        } catch (PropertyVetoException ex) {
        }
        ((MDIDesktopPane)jDesktopPaneMain).checkDesktopSize();
        jfrmMain.setVisible(true);
    }//GEN-LAST:event_jbtProcurarActionPerformed
    private void jMnuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMnuSairActionPerformed
        try {
            JmdiMain.facadeBL.getFacadeDAO().closeConnection();
        } catch (PersistableException ex) {
        }
        System.exit(0);
    }//GEN-LAST:event_jMnuSairActionPerformed
    private void jMnuLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMnuLogoutActionPerformed
        this.Logout();
    }//GEN-LAST:event_jMnuLogoutActionPerformed
    private void jMnuLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMnuLoginActionPerformed
        this.Login();
    }//GEN-LAST:event_jMnuLoginActionPerformed

    private void jBtRejeitarCandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtRejeitarCandActionPerformed
       int dialogButton = 0;
        int dialogResult = JOptionPane.showConfirmDialog (null, "Tem a certeza que deseja continuar?","Aviso",dialogButton);
        if(dialogResult == JOptionPane.YES_OPTION) { 
            Candidatura c = ((JintFrmNewCand)((SidePanel)jPanelCandidatura).getjIntFrame()).getCand();
           try {
               JmdiMain.facadeBL.rejeitarCand(c);
           } catch (PersistableException ex) {
               JOptionPane.showMessageDialog(this,"Não foi possivel efectuar alteração, por favor contacte o Administrador de Sistema","Erro", JOptionPane.ERROR_MESSAGE);
               return;
           }
           
        }
    }//GEN-LAST:event_jBtRejeitarCandActionPerformed

    private void jBtRejeitarCand1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtRejeitarCand1ActionPerformed
       int dialogButton = 0;
        int dialogResult = JOptionPane.showConfirmDialog (null, "Tem a certeza que deseja continuar?","Aviso",dialogButton);
        if(dialogResult == JOptionPane.YES_OPTION) { 
            Candidatura c = ((JintFrmNewCand)((SidePanel)jPanelCandidatura).getjIntFrame()).getCand();
           try {
               JmdiMain.facadeBL.ReabrirCand(c);
           } catch (PersistableException ex) {
               JOptionPane.showMessageDialog(this,"Não foi possivel efectuar alteração, por favor contacte o Administrador de Sistema","Erro", JOptionPane.ERROR_MESSAGE);
               return;
           }
           
        }
    }//GEN-LAST:event_jBtRejeitarCand1ActionPerformed

    private void jBtEncerrarProjectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtEncerrarProjectoActionPerformed
       int dialogButton = 0;
        int dialogResult = JOptionPane.showConfirmDialog (null, "Tem a certeza que deseja continuar?","Aviso",dialogButton);
        if(dialogResult == JOptionPane.YES_OPTION) { 
            Projecto pro = ((JintFrmProject)((SidePanel)this.jPanelProject).getjIntFrame()).projecto;
           try {
               JmdiMain.facadeBL.EncerrarProjecto(pro);
               JOptionPane.showMessageDialog(this,"Projecto encerrado com sucesso!","Sucesso", JOptionPane.INFORMATION_MESSAGE); 
               for(JInternalFrame f : this.jDesktopPaneMain.getAllFrames()) {
                   if(f instanceof JintFrmProject) f.doDefaultCloseAction();
               }
           } catch (PersistableException ex) {
               JOptionPane.showMessageDialog(this,"Não foi possivel efectuar alteração, por favor contacte o Administrador de Sistema","Erro", JOptionPane.ERROR_MESSAGE);
               return;
           } 
        }  
    }//GEN-LAST:event_jBtEncerrarProjectoActionPerformed

    private void jBtReabrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtReabrirActionPerformed
       int dialogButton = 0;
        int dialogResult = JOptionPane.showConfirmDialog (null, "Tem a certeza que deseja continuar?","Aviso",dialogButton);
        if(dialogResult == JOptionPane.YES_OPTION) { 
            Projecto pro = ((JintFrmProject)((SidePanel)this.jPanelProject).getjIntFrame()).projecto;
           try {
               JmdiMain.facadeBL.ReabrirProjecto(pro);
               JOptionPane.showMessageDialog(this,"Projecto reaberto com sucesso!","Sucesso", JOptionPane.INFORMATION_MESSAGE);                
               for(JInternalFrame f : this.jDesktopPaneMain.getAllFrames()) {
                   if(f instanceof JintFrmProject) f.doDefaultCloseAction();
               }               
           } catch (PersistableException ex) {
               JOptionPane.showMessageDialog(this,"Não foi possivel efectuar alteração, por favor contacte o Administrador de Sistema","Erro", JOptionPane.ERROR_MESSAGE);
               return;
           } 
         
        } 
    }//GEN-LAST:event_jBtReabrirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JmdiMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JmdiMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JmdiMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JmdiMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new JmdiMain().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserPanel dateChooserPanel1;
    private javax.swing.JMenuBar jBarraMenus;
    private javax.swing.JButton jBtAprovarCand;
    private javax.swing.JButton jBtConcluirTarefa;
    private javax.swing.JButton jBtDoacao;
    private javax.swing.JButton jBtDoador;
    private javax.swing.JButton jBtDonativos;
    private javax.swing.JButton jBtEncerrarProjecto;
    private javax.swing.JButton jBtFuncionario;
    private javax.swing.JButton jBtInitTarefa;
    private javax.swing.JButton jBtNewCand;
    private javax.swing.JButton jBtPlaneamento;
    private javax.swing.JButton jBtReabrir;
    private javax.swing.JButton jBtRegistoMaterial;
    private javax.swing.JButton jBtRejeitarCand;
    private javax.swing.JButton jBtRejeitarCand1;
    private javax.swing.JButton jBtVoluntariado;
    private javax.swing.JButton jBtVoluntario;
    public javax.swing.JDesktopPane jDesktopPaneMain;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLayeredPane jLayeredPaneLeft;
    private javax.swing.JLabel jLblEstado;
    private javax.swing.JLabel jLblEstadoCand;
    private javax.swing.JLabel jLblLoginStatus;
    private javax.swing.JPanel jLeftPanelLogo;
    private javax.swing.JToolBar jMainToolBar;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenu jMenuWindow;
    private javax.swing.JMenuItem jMnuConnectionSetup;
    private javax.swing.JMenuItem jMnuLogin;
    private javax.swing.JMenuItem jMnuLogout;
    private javax.swing.JMenuItem jMnuSair;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelAprovarCand;
    private javax.swing.JPanel jPanelCandidatura;
    private javax.swing.JPanel jPanelDefault;
    private javax.swing.JPanel jPanelEncerrar;
    private javax.swing.JPanel jPanelPlaneamento;
    public javax.swing.JPanel jPanelProject;
    private javax.swing.JPanel jPanelReabrir;
    private javax.swing.JPanel jPanelReabrirCand;
    private javax.swing.JPanel jPanelRegistos;
    private javax.swing.JPanel jPanelRejeitarCand;
    private javax.swing.JPanel jPanelTarefas;
    private javax.swing.JScrollPane jScrollDesktopMain;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator10;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar.Separator jSeparator9;
    private javax.swing.JPanel jStatusBar;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton jbtProcurar;
    // End of variables declaration//GEN-END:variables

    @Override
    public void internalFrameOpened(InternalFrameEvent e) {

          
    }

    @Override
    public void internalFrameClosing(InternalFrameEvent e) {
        JDesktopPane pane = e.getInternalFrame().getDesktopPane();
        if(pane.getAllFrames().length==1) { // last one
            jPanelProject.setVisible(false);
            jPanelDefault.setVisible(true);
            jPanelCandidatura.setVisible(false);
       }
    }

    @Override
    public void internalFrameClosed(InternalFrameEvent e) {

    }

    @Override
    public void internalFrameIconified(InternalFrameEvent e) {
      //  throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void internalFrameDeiconified(InternalFrameEvent e) {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void internalFrameActivated(InternalFrameEvent e) {
         if(e.getInternalFrame() instanceof JintFrmProject) {
            ((SidePanel)jPanelProject).setInternalFrame(e.getInternalFrame());
            jPanelProject.setVisible(true);
            jPanelDefault.setVisible(false);
            jPanelCandidatura.setVisible(false);
            Projecto pro = ((JintFrmProject)e.getInternalFrame()).projecto;            
            if(pro.getDtConclusaoProjecto()==null) {
             jLblEstado.setText("Em Execução");  
              this.jPanelPlaneamento.setVisible(true);
              this.jPanelTarefas.setVisible(true);
              this.jPanelRegistos.setVisible(true);
              this.jPanelEncerrar.setVisible(true);
              this.jPanelReabrir.setVisible(false);             
            } else {
              jLblEstado.setText("Concluido");  
              this.jPanelPlaneamento.setVisible(false);
              this.jPanelTarefas.setVisible(false);
              this.jPanelRegistos.setVisible(false);
              this.jPanelEncerrar.setVisible(false);
              this.jPanelReabrir.setVisible(true);
            } 
        } else if (e.getInternalFrame() instanceof JintFrmNewCand){
            if(((JintFrmNewCand)e.getInternalFrame()).viewMode) {
                ((SidePanel)jPanelCandidatura).setInternalFrame(e.getInternalFrame());
                jPanelProject.setVisible(false);
                jPanelDefault.setVisible(false);
                jPanelCandidatura.setVisible(true);
                Candidatura cand = ((JintFrmNewCand)e.getInternalFrame()).cand;
                if(cand.getEstado().equals("Rejeitada")) {
                    this.jPanelAprovarCand.setVisible(false);                    
                    this.jPanelReabrirCand.setVisible(true);                    
                    this.jPanelRejeitarCand.setVisible(false);
                } else if (cand.getEstado().equals("Em Aprovação")) {
                    this.jPanelAprovarCand.setVisible(true);                    
                    this.jPanelRejeitarCand.setVisible(true);
                    this.jPanelReabrirCand.setVisible(false);                       
                } else {
                    jPanelAprovarCand.setVisible(false);
                    jPanelRejeitarCand.setVisible(false);
                    jPanelReabrirCand.setVisible(false);  
                }
                jLblEstadoCand.setText(cand.getEstado());
        } else {
            jPanelProject.setVisible(false);
            jPanelDefault.setVisible(true);
            jPanelCandidatura.setVisible(false);
        } 
        }

    }

    @Override
    public void internalFrameDeactivated(InternalFrameEvent e) {      
        if(e.getInternalFrame() instanceof ModalJinternalFrame)
            ((ModalJinternalFrame)e.getSource()).setLayer(8);

    }

    

}




/**
 * An extension of WDesktopPane that supports often used MDI functionality. This
 * class also handles setting scroll bars for when windows move too far to the
 * left or bottom, providing the MDIDesktopPane is in a ScrollPane.
 */
class MDIDesktopPane extends JDesktopPane {
  private static final int FRAME_OFFSET = 20;

  private final MDIDesktopManager manager;

  public MDIDesktopPane() {
    manager = new MDIDesktopManager(this);
    setDesktopManager((DesktopManager) manager);
    setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);
  }

  @Override
  public void setBounds(int x, int y, int w, int h) {
    super.setBounds(x, y, w, h);
    checkDesktopSize();
  }

  public Component add(JInternalFrame frame) {
    JInternalFrame[] array = getAllFrames();
    Point p;
    int w;
    int h;

    Component retval = super.add(frame);
    checkDesktopSize();
    if (array.length > 0) {
      p = array[0].getLocation();
      p.x = p.x + FRAME_OFFSET;
      p.y = p.y + FRAME_OFFSET;
    } else {
      p = new Point(0, 0);
    }
    frame.setLocation(p.x, p.y);
    if (frame.isResizable()) {
      w = getWidth() - (getWidth() / 3);
      h = getHeight() - (getHeight() / 3);
      if (w < frame.getMinimumSize().getWidth())
        w = (int) frame.getMinimumSize().getWidth();
      if (h < frame.getMinimumSize().getHeight())
        h = (int) frame.getMinimumSize().getHeight();
      frame.setSize(w, h);
    }
    moveToFront(frame);
    frame.setVisible(true);
    try {
      frame.setSelected(true);
    } catch (PropertyVetoException e) {
      frame.toBack();
    }
    return retval;
  }

  @Override
  public void remove(Component c) {
    super.remove(c);
    checkDesktopSize();
  }

  /**
   * Cascade all internal frames
   */
  public void cascadeFrames() {
    int x = 0;
    int y = 0;
    JInternalFrame allFrames[] = getAllFrames();

    manager.setNormalSize();
    int frameHeight = (getBounds().height - 5) - allFrames.length * FRAME_OFFSET;
    int frameWidth = (getBounds().width - 5) - allFrames.length * FRAME_OFFSET;
    for (int i = allFrames.length - 1; i >= 0; i--) {
     // allFrames[i].setSize(frameWidth, frameHeight);
      allFrames[i].setLocation(x, y);
      x = x + FRAME_OFFSET;
      y = y + FRAME_OFFSET;
    }
    this.checkDesktopSize();
    
  }

  /**
   * Tile all internal frames
   */
  public void tileFrames() {
    java.awt.Component allFrames[] = getAllFrames();
    manager.setNormalSize();
    int frameHeight = getBounds().height / allFrames.length;
    int y = 0;
      for (Component allFrame : allFrames) {
        //  allFrame.setSize(getBounds().width, frameHeight);
          allFrame.setLocation(0, y);
          y = y + frameHeight;
      }
    this.checkDesktopSize();
  }

  /**
   * Sets all component size properties ( maximum, minimum, preferred) to the
   * given dimension.
   */
  public void setAllSize(Dimension d) {
    setMinimumSize(d);
    setMaximumSize(d);
    setPreferredSize(d);
  }

  /**
   * Sets all component size properties ( maximum, minimum, preferred) to the
   * given width and height.
   */
  public void setAllSize(int width, int height) {
    setAllSize(new Dimension(width, height));
  }

  public void checkDesktopSize() {
    if (getParent() != null && isVisible())
      manager.resizeDesktop();
  }
}


/**
 * Private class used to replace the standard DesktopManager for JDesktopPane.
 * Used to provide scrollbar functionality.
 */
class MDIDesktopManager extends DefaultDesktopManager {
  private final MDIDesktopPane desktop;

  public MDIDesktopManager(MDIDesktopPane desktop) {
    this.desktop = desktop;
  }

  @Override
  public void endResizingFrame(JComponent f) {
    super.endResizingFrame(f);
    resizeDesktop();
  }

  @Override
  public void endDraggingFrame(JComponent f) {
    super.endDraggingFrame(f);
    resizeDesktop();
  }

  public void setNormalSize() {
    JScrollPane scrollPane = getScrollPane();
    int x = 0;
    int y = 0;
    Insets scrollInsets = getScrollPaneInsets();

    if (scrollPane != null) {
      Dimension d = scrollPane.getVisibleRect().getSize();
      if (scrollPane.getBorder() != null) {
        d.setSize(d.getWidth() - scrollInsets.left - scrollInsets.right, d.getHeight()
            - scrollInsets.top - scrollInsets.bottom);
      }

      d.setSize(d.getWidth() - 20, d.getHeight() - 20);
      desktop.setAllSize(x, y);
      scrollPane.invalidate();
      scrollPane.validate();
    }
  }

  private Insets getScrollPaneInsets() {
    JScrollPane scrollPane = getScrollPane();
    if (scrollPane == null)
      return new Insets(0, 0, 0, 0);
    else
      return getScrollPane().getBorder().getBorderInsets(scrollPane);
  }

  private JScrollPane getScrollPane() {
    if (desktop.getParent() instanceof JViewport) {
      JViewport viewPort = (JViewport) desktop.getParent();
      if (viewPort.getParent() instanceof JScrollPane)
        return (JScrollPane) viewPort.getParent();
    }
    return null;
  }

  protected void resizeDesktop() {
    int x = 0;
    int y = 0;
    JScrollPane scrollPane = getScrollPane();
    Insets scrollInsets = getScrollPaneInsets();

    if (scrollPane != null) {
      JInternalFrame allFrames[] = desktop.getAllFrames();
      for (int i = 0; i < allFrames.length; i++) {
        if (allFrames[i].getX() + allFrames[i].getWidth() > x) {
          x = allFrames[i].getX() + allFrames[i].getWidth();
        }
        if (allFrames[i].getY() + allFrames[i].getHeight() > y) {
          y = allFrames[i].getY() + allFrames[i].getHeight();
        }
      }
      Dimension d = scrollPane.getVisibleRect().getSize();
      if (scrollPane.getBorder() != null) {
        d.setSize(d.getWidth() - scrollInsets.left - scrollInsets.right, d.getHeight()
            - scrollInsets.top - scrollInsets.bottom);
      }

      if (x <= d.getWidth())
        x = ((int) d.getWidth()) - 20;
      if (y <= d.getHeight())
        y = ((int) d.getHeight()) - 20;
      desktop.setAllSize(x, y);
      scrollPane.invalidate();
      scrollPane.validate();
    }
  }
}

/**
 * Menu component that handles the functionality expected of a standard
 * "Windows" menu for MDI applications.
 */
class WindowMenu extends JMenu {
  private MDIDesktopPane desktop;

  private final JMenuItem cascade = new JMenuItem("Cascata");
  private final JMenuItem tile = new JMenuItem("Mosaico");

  public WindowMenu(MDIDesktopPane desktop) {
    this.desktop = desktop;
    setText("Window");
    
    cascade.addActionListener(new ActionListener() {
      @Override
      public void actionPerformed(ActionEvent ae) {
        WindowMenu.this.desktop.cascadeFrames();
      }
    });
    
    tile.addActionListener(new ActionListener() {
      @Override
      public void actionPerformed(ActionEvent ae) {
        WindowMenu.this.desktop.tileFrames();
      }
    });
    
    addMenuListener(new MenuListener() {
      @Override
      public void menuCanceled(MenuEvent e) {
      }

      @Override
      public void menuDeselected(MenuEvent e) {
        removeAll();
      }

      @Override
      public void menuSelected(MenuEvent e) {
        buildChildMenus();
      }
    });
  }

  /* Sets up the children menus depending on the current desktop state */
  private void buildChildMenus() {
    int i;
    ChildMenuItem menu;
    JInternalFrame[] array = desktop.getAllFrames();

    add(cascade);
    add(tile);
    if (array.length > 0)
      addSeparator();
    cascade.setEnabled(array.length > 0);
    tile.setEnabled(array.length > 0);

    for (i = 0; i < array.length; i++) {
      menu = new ChildMenuItem(array[i],i+1);
      menu.setState(i == 0);
      menu.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent ae) {
          JInternalFrame frame = ((ChildMenuItem) ae.getSource()).getFrame();
          frame.moveToFront();
          try {
            frame.setSelected(true);
          } catch (PropertyVetoException e) {
          }
        }
      });
      menu.setIcon(array[i].getFrameIcon());
      add(menu);
    }
  }

  /*
   * This JCheckBoxMenuItem descendant is used to track the child frame that
   * corresponds to a give menu.
   */
  class ChildMenuItem extends JCheckBoxMenuItem {
    private final JInternalFrame frame;
    
    public ChildMenuItem(JInternalFrame frame, int pos) {
      super(String.valueOf(pos) +" - "+frame.getTitle());
      this.frame = frame;
    }

    public JInternalFrame getFrame() {
      return frame;
    }
  }
}